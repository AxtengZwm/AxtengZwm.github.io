<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DLearn on 学习笔记</title><link>https://AxtengZwm.github.com/categories/dlearn/</link><description>Recent content in DLearn on 学习笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Thu, 24 Sep 2020 09:20:11 +0800</lastBuildDate><atom:link href="https://AxtengZwm.github.com/categories/dlearn/index.xml" rel="self" type="application/rss+xml"/><item><title>深度学习</title><link>https://AxtengZwm.github.com/posts/keras-study/</link><pubDate>Thu, 24 Sep 2020 09:20:11 +0800</pubDate><guid>https://AxtengZwm.github.com/posts/keras-study/</guid><description>机器学习笔记 以服装图形进行分类为例 课程来自https://tensorflow.google.cn/tutorials/keras/classification
1.导入相关包 1import tensorflow as tf 2from tensorflow import keras 3 4import numpy as np 5import matplotlib.pyplot as plt 2.导入数据集 1fashion_mnist = keras.datasets.fashion_mnist 2(train_images, train_labels), (test_images, test_labels) = fashion_mnist.load_data() 3.数据预处理 此数据集中的图片像数值在0-255之间，将这些值缩小至0到1之间，再将其馈送到神经网络模型。
1train_images = train_images / 255.0 2test_images = test_iamges / 255.0 4.构建模型 设置层 1model = keras.Sequential([ 2keras.layers.Flatten(input_shape(28,28)),#将图像格式从二维数组（28*28）转换为一维数组784 3keras.layers.Dense(128, activation=&amp;#39;relu&amp;#39;),#Dense表示全连接层，128个节点，激活函数为relu 4keras.layers.Dense(10)#10个节点，代表本数据集中的十种分类 5 ]) 编译模型 1model.compile(optimizer = &amp;#39;adam&amp;#39;),#优化器 2loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits = True),#损失函数 3metrics = [&amp;#39;accuracy&amp;#39;]#指标，此处使用的是准确率，即分类正确比率 训练模型 1model.</description></item></channel></rss>